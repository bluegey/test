#include "OLED_Task.h"
#include "FreeRTOS.h"
#include "task.h"
#include "queue.h"
#include "croutine.h"
#include "FreeRTOSConfig.h"
#include "oled.h"
#include "key.h"
#define uchar unsigned char
/*===菜单===*/
OLED_OptionDisplay ModeOption ;
OLED_WorkDisplayOption WorkOption  ;
OLED_FeedbackDisplayOption FeedbackOption ;

/*===Motor工作下的枚举===*/
Motor_ModeOption  MotorMode;
Motor_SetOption   MotorSet;

/*===OLED显示===*/
static void OLED_Behaior(void);//显示函数
static void OLED_StartDisplay(void);//开始界面
static void OLED_MainMenuDisplay(void);//主菜单选择

/*==OLED电机部分的显示===*/
static void OLED_MotorMenuDisplay(void);//选择电机界面
static void OLED_MotorModeDisplay(void);//电机工作方式的选择
static void OLED_MotorSetDisplay(void);//电机性能设置界面
static void OLED_MotorFeedbackDisplay(void);//电机反馈结果界面

/*===按键工作方式===*/
static void KEY_WorkModeOne(void);//测试种类的选择
static void KEY_WorkModeTwo(void);//执行工作的选择
static void KEY_WorkModeThree(void);//设置参数的选择

/*===按键标志位===*/
uint8_t KEY_UP_Flag = 0;
uint8_t KEY_Down_Flag = 0;
uint8_t KEY_Sure_Flag = 0;

uint8_t KEY_UP_State = 0;
uint8_t KEY_Down_State = 0;
uint8_t KEY_Sure_S
extern void OLED_Task(void *pvParameters)
{	
	OLED_Clear();//清屏
	vTaskDelay(100);
	ModeOption = Start_Display;
	KEY_Init();//KEY初始化
	vTaskDelay(1000);
	while(1)
	{
//	OLED_Behaior();
	KEY_WorkModeOne();
	OLED_MainMenuDisplay();
	
	}
}
static void OLED_Behaior(void)
{
	switch(ModeOption)
	{
		case Start_Display:
			OLED_StartDisplay();
		break;
		
		case MainMenu_Display:
			OLED_MainMenuDisplay();
		break;
		
		case  Motor_Display:
			OLED_MotorMenuDisplay();
		break;
	
	}
}
static void KEY_WorkModeOne(void)
{
 	u8 key=0;	
	uchar postion_y_Up = 0 ;
	uchar postion_y_Sure = 0 ;
	uchar postion_y_Down = 0 ;
	uchar postion_y = 0;
	uchar Last_postion = 0;//记录上一次位置
	int n = 8;
	
 	key=KEY_Scan(0);	//得到键值
	if(key)
	{
		OLED_ShowString(10*n,postion_y_Up,"<",16);
		vTaskDelay(25);
		if(key)
		{	
		if((postion_y == 0)&&(WKUP_PRES==3))		
		{	
			OLED_ShowString(10*n,Last_postion," ",16); 
			OLED_ShowString(10*n,6," ",16);
			postion_y_Up+=3;
			OLED_ShowString(10*n,Last_postion," ",16); 
			OLED_ShowString(10*n,postion_y_Up,"<",16);
			Last_postion=postion_y;
			postion_y=postion_y_Up;//更新位置坐标
			OLED_ShowString(10*n,Last_postion," ",16); 
		}
		else if((postion_y == 3)&&(WKUP_PRES==3))
		{
			postion_y_Up+=3;
			OLED_ShowString(10*n,postion_y_Up,"<",16);
			Last_postion=postion_y;
			postion_y=postion_y_Up;//更新位置坐标
			OLED_ShowString(10*n,Last_postion," ",16); 
		}
	else if((postion_y == 6)&&(WKUP_PRES==3))
		{
			postion_y_Up=0;
			OLED_ShowString(10*n,postion_y_Up,"<",16);
			Last_postion=postion_y;
			postion_y=postion_y_Up;//更新位置坐标
			OLED_ShowString(10*n,Last_postion," ",16);
		}	
		
//		case KEY1_PRES:	//确认
//		{
//		OLED_ShowString(10*n,postion_y,"<",16);  
//		postion_y--;
//		if(postion_y<=0)
//		{
//			postion_y=0;
//		}
//		}
		
//		if(postion_y == 0)
//		{
//			postion_y_Up+=6;
//			OLED_ShowString(10*n,postion_y_Up,"<",16); 
//			postion_y=postion_y_Up;//更新位置坐标
//		}
//		else if(postion_y == 3)
//		{
//			postion_y_Up-=3;
//			OLED_ShowString(10*n,postion_y_Up,"<",16);
//			postion_y=postion_y_Up;//更新位置坐标
//		}
//		else if(postion_y == 6)
//		{
//			postion_y_Up-3;
//			OLED_ShowString(10*n,postion_y_Up,"<",16);
//			postion_y=postion_y_Up;//更新位置坐标
//		}	
	}
}
}
	
static void OLED_StartDisplay(void)
{
	int n = 8;
	vTaskDelay(1000);
	OLED_ShowCHinese(3*n,1,0);//电
	OLED_ShowCHinese(5*n,1,1);//机
	OLED_ShowCHinese(7*n,1,2);//调
	OLED_ShowCHinese(9*n,1,3);//试
	OLED_ShowCHinese(11*n,1,5);//板

	OLED_ShowCHinese(4*n,4,6);//任
	OLED_ShowCHinese(6*n,4,7);//意
	OLED_ShowCHinese(8*n,4,8);//键
	OLED_ShowCHinese(10*n,4,9);//继
	OLED_ShowCHinese(12*n,4,10);//续	
	
	OLED_ShowString(12*n,6,"...",32);  
}
static void OLED_MainMenuDisplay(void)
{
	int n = 8;
	u8 postion_y = 0 ;
	vTaskDelay(1000);
	OLED_ShowString(n,0,"1",16);//1
	OLED_ShowString(n,3,"2",16);//2
	OLED_ShowString(n,6,"3",16);//3
	
	OLED_ShowString(2*n,1,".",24);  
	OLED_ShowString(2*n,4,".",24);  
	OLED_ShowString(2*n,7,".",24);  

	OLED_ShowCHinese(3*n,0,11);//电
	OLED_ShowCHinese(5*n,0,12);//机
	OLED_ShowCHinese(3*n,3,13);//舵
	OLED_ShowCHinese(5*n,3,14);//机
	OLED_ShowCHinese(3*n,6,15);//陀
	OLED_ShowCHinese(5*n,6,16);//螺
	OLED_ShowCHinese(7*n,6,17);//仪		
	
}
static void OLED_MotorMenuDisplay(void)
{
	int n = 8;
	vTaskDelay(1000);
	OLED_ShowString(n,0,"1",16);//1
	OLED_ShowString(n,3,"2",16);//2
	OLED_ShowString(n,6,"3",16);//3
	
	OLED_ShowString(2*n,1,".",24);  
	OLED_ShowString(2*n,4,".",24);  
	OLED_ShowString(2*n,7,".",24);  

	
	OLED_ShowString(3*n,0,"3508",16); 
	OLED_ShowCHinese(7*n,3,11);//电
	OLED_ShowCHinese(9*n,3,12);//机
	
	OLED_ShowString(3*n,3,"6020",16); 
	OLED_ShowCHinese(7*n,0,11);//电
	OLED_ShowCHinese(9*n,0,12);//机
	
	OLED_ShowString(3*n,6,"2006",16); 
	OLED_ShowCHinese(7*n,6,11);//电
	OLED_ShowCHinese(9*n,6,12);//机	
}
static void OLED_MotorModeDisplay(void)//电机工作方式的选择
{
	int n = 8;
	vTaskDelay(1000);
	OLED_ShowString(n,2,"1",16);//1
	OLED_ShowString(n,5,"2",16);//2
	
	OLED_ShowString(2*n,3,".",24);  
	OLED_ShowString(2*n,6,".",24); 
	
	OLED_ShowCHinese(3*n,2,18);//速
	OLED_ShowCHinese(5*n,2,19);//度
	OLED_ShowCHinese(7*n,2,22);//模
	OLED_ShowCHinese(9*n,2,23);//式
	
	OLED_ShowCHinese(3*n,5,20);//角
	OLED_ShowCHinese(5*n,5,21);//度
	OLED_ShowCHinese(7*n,5,22);//模
	OLED_ShowCHinese(9*n,5,23);//式
	
	
}
static void OLED_MotorSetDisplay(void)//电机性能设置界面
{
	int n = 8;
	vTaskDelay(1000);
	OLED_ShowString(n,0,"1",16);//1
	OLED_ShowString(n,3,"2",16);//2
	OLED_ShowString(n,6,"3",16);//3

	OLED_ShowString(2*n,1,".",24);  
	OLED_ShowString(2*n,4,".",24);  
	OLED_ShowString(2*n,7,".",24); 
	
	OLED_ShowString(3*n,0,"SET",16); 
	OLED_ShowString(3*n,3,"KP",16); 
	OLED_ShowString(3*n,6,"KD",16); 
	
	OLED_ShowString(6*n,0,":",16); 
	OLED_ShowString(6*n,3,":",16); 
	OLED_ShowString(6*n,6,":",16); 
	
}
static void OLED_MotorFeedbackDisplay(void)//电机反馈结果界面
{
	int n = 8;
	vTaskDelay(1000);
	OLED_ShowString(n,0,"1",16);//1
	OLED_ShowString(n,3,"2",16);//2
	OLED_ShowString(n,6,"3",16);//3

	OLED_ShowString(2*n,1,".",24);  
	OLED_ShowString(2*n,4,".",24);  
	OLED_ShowString(2*n,7,".",24); 
	
	OLED_ShowString(3*n,0,"fdb",16); 
	OLED_ShowString(3*n,3,"spm",16); 
	OLED_ShowString(3*n,6,"angle",16); 
	
	OLED_ShowString(6*n,0,":",16); 
	OLED_ShowString(6*n,3,":",16); 
	OLED_ShowString(8*n,6,":",16); 

}